{"version":3,"sources":["../../../source/test/library/visitor-single.test.js"],"names":["createRequire","CreateRequire","Babel","Test","ModuleInvalidImportTypeReplaceIdentifierError","InvalidImportTypeReplaceIdentifierError","Require","import","meta","url","beforeEach","test","context","codeIn","option","resolve","plugins","rule","replaceWith","code","actualCodeOut","transformAsync","expectedCodeOut","is","addImport","push","promise","throwsAsync"],"mappings":"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","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Babel from '@babel/core'\nimport Test from 'ava'\n\nimport ModuleInvalidImportTypeReplaceIdentifierError from '../../library/error/invalid-import-type-replace-identifier-error.cjs'\n\nconst { InvalidImportTypeReplaceIdentifierError } = ModuleInvalidImportTypeReplaceIdentifierError\nconst Require = CreateRequire(import.meta.url)\n\nTest.beforeEach((test) => {\n\n  test.context.codeIn = 'console.log(__require.resolve(\\'./index.js\\'))'\n  test.context.option = { \n    'plugins': [ \n      [\n        Require.resolve('../../index.cjs'),\n        {\n          'rule': [\n            {\n              'searchFor': '__require',\n              'replaceWith': '...',\n              'parserOption': { \n                'plugins': [ 'importMeta' ], \n                'sourceType': 'module' \n              },\n              'addImport': []\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('rule.replaceWith = \\'createRequire(import.meta.url)\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = 'createRequire(import.meta.url)'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'console.log(createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using non-index', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using __importIdentifier_0', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'url',\n    'option': {\n      'nameHint': 'URL'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _URL from \"url\";\\nimport _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  // test.log(actualCodeOut)\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using __importIdentifier_1', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_1(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'url',\n    'option': {\n      'nameHint': 'URL'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _URL from \"url\";\\nimport _createRequire from \"module\";\\nconsole.log(_URL(import.meta.url).resolve(\\'./index.js\\'));'\n\n  // test.log(actualCodeOut)\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'named\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'named',\n    'name': 'createRequire',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import { createRequire as _createRequire } from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'namespace\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'namespace',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import * as _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'sideEffect\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'sideEffect',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import \"module\";\\nconsole.log(__importIdentifier_0(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: invalid', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': '_sideEffect',\n    'source': 'module'\n  })\n\n  let promise = Babel.transformAsync(test.context.codeIn, test.context.option)\n\n  await test.throwsAsync(promise, { 'instanceOf': InvalidImportTypeReplaceIdentifierError })\n\n})\n\n"],"file":"visitor-single.test.js"}