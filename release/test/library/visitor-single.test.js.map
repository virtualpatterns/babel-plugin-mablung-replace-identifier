{"version":3,"sources":["../../../source/test/library/visitor-single.test.js"],"names":[],"mappings":"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","file":"visitor-single.test.js","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Babel from '@babel/core'\nimport Test from 'ava'\n\nimport ModuleInvalidImportTypeReplaceIdentifierError from '../../library/error/invalid-import-type-replace-identifier-error.cjs'\n\nconst { InvalidImportTypeReplaceIdentifierError } = ModuleInvalidImportTypeReplaceIdentifierError\nconst Require = CreateRequire(import.meta.url)\n\nTest.beforeEach((test) => {\n\n  test.context.codeIn = 'console.log(__require.resolve(\\'./index.js\\'))'\n  test.context.option = { \n    'plugins': [ \n      [\n        Require.resolve('../../index.cjs'),\n        {\n          'rule': [\n            {\n              'searchFor': '__require',\n              'replaceWith': '...',\n              'parserOption': { \n                'plugins': [ 'importMeta' ], \n                'sourceType': 'module' \n              },\n              'addImport': []\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('rule.replaceWith = \\'createRequire(import.meta.url)\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = 'createRequire(import.meta.url)'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'console.log(createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using non-index', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using __importIdentifier_0', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'url',\n    'option': {\n      'nameHint': 'URL'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _URL from \"url\";\\nimport _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  // test.log(actualCodeOut)\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'default\\' using __importIdentifier_1', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_1(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'default',\n    'source': 'url',\n    'option': {\n      'nameHint': 'URL'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import _URL from \"url\";\\nimport _createRequire from \"module\";\\nconsole.log(_URL(import.meta.url).resolve(\\'./index.js\\'));'\n\n  // test.log(actualCodeOut)\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'named\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'named',\n    'name': 'createRequire',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import { createRequire as _createRequire } from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'namespace\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'namespace',\n    'source': 'module',\n    'option': {\n      'nameHint': 'createRequire'\n    }\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import * as _createRequire from \"module\";\\nconsole.log(_createRequire(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: \\'sideEffect\\'', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': 'sideEffect',\n    'source': 'module'\n  })\n\n  let { code: actualCodeOut } = await Babel.transformAsync(test.context.codeIn, test.context.option)\n  let expectedCodeOut = 'import \"module\";\\nconsole.log(__importIdentifier_0(import.meta.url).resolve(\\'./index.js\\'));'\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('addImport.type: invalid', async (test) => {\n\n  test.context.option.plugins[0][1].rule[0].replaceWith = '__importIdentifier_0(import.meta.url)'\n  test.context.option.plugins[0][1].rule[0].addImport.push({\n    'type': '_sideEffect',\n    'source': 'module'\n  })\n\n  let promise = Babel.transformAsync(test.context.codeIn, test.context.option)\n\n  await test.throwsAsync(promise, { 'instanceOf': InvalidImportTypeReplaceIdentifierError })\n\n})\n\n"]}