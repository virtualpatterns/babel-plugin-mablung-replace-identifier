{"version":3,"sources":["../../source/library/visitor.cjs"],"names":[],"mappings":"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","file":"visitor.cjs","sourcesContent":["import { addDefault as AddDefaultImport, addNamed as AddNamedImport, addNamespace as AddNamespaceImport, addSideEffect as AddSideEffectImport } from '@babel/helper-module-imports'\nimport Is from '@pwn/is'\nimport * as Parser from '@babel/parser'\nimport { Visitor as BaseVisitor } from '@virtualpatterns/mablung-babel-plugin/visitor'\n\nimport { InvalidImportTypeReplaceIdentifierError } from './error/invalid-import-type-replace-identifier-error.cjs'\n\nclass Visitor extends BaseVisitor {\n\n  constructor(babel) {\n    super(babel)\n\n    this._programPath = null\n    this._importIdentifier = []\n\n  }\n\n  get nodeType() {\n    return [ 'Program', 'Identifier' ]\n  }\n\n  onProgramNode(path) {\n    // console.log(`Visitor.onProgramNode('${path.node.name}')`)\n\n    this._programPath = path\n    this._importIdentifier = []\n\n  }\n\n  onIdentifierNode(path, state) {\n    // console.log(`Visitor.onIdentifierNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n      rule.parserOption = rule.parserOption ? rule.parserOption : {}\n\n      if (rule.searchForPattern.test(path.node.name)) {\n\n        // console.log(`Replacing '${path.node.name}' with '${rule.replaceWith}'`)\n\n        // if (rule.parserOption) {\n        //   console.dir(rule.parserOption)\n        // }\n\n        if(this._importIdentifier.length <= 0) {\n\n          rule.addImport = rule.addImport ? rule.addImport : []\n          rule.addImport.forEach((addImport) => {\n\n            switch (addImport.type) {\n              case 'default':\n                this._importIdentifier.push(AddDefaultImport(this._programPath, addImport.source, addImport.option))\n                break\n              case 'named':\n                this._importIdentifier.push(AddNamedImport(this._programPath, addImport.name, addImport.source, addImport.option))\n                break\n              case 'namespace':\n                this._importIdentifier.push(AddNamespaceImport(this._programPath, addImport.source, addImport.option))\n                break\n              case 'sideEffect':\n                AddSideEffectImport(this._programPath, addImport.source)\n                break\n              default:\n                throw new InvalidImportTypeReplaceIdentifierError(addImport.type)\n            }\n            \n          })\n\n          // this supports indexed __importIdentifier (.e.g. __importIdentifier_5)\n          rule.replaceWith = this._importIdentifier.length <= 0 ? rule.replaceWith : this._importIdentifier.reduce((replaceWith, importIdentifier, index) => replaceWith = replaceWith.replace(new RegExp(`__importIdentifier_${index}`, 'gi'), importIdentifier.name), rule.replaceWith)\n          \n          // this supports non-indexed __importIdentifier, as was supported only initially\n          rule.replaceWith = this._importIdentifier.length <= 0 ? rule.replaceWith : rule.replaceWith.replace(new RegExp('__importIdentifier', 'gi'), this._importIdentifier[this._importIdentifier.length - 1].name)\n          \n          rule.replaceWithNode = rule.replaceWithNode ?  rule.replaceWithNode : Parser.parseExpression(rule.replaceWith, rule.parserOption)\n  \n          this._importIdentifier = []\n\n        }\n\n        path.replaceWith(rule.replaceWithNode)\n\n      }\n\n    })\n\n  }\n\n}\n\nexport { Visitor }\n"]}